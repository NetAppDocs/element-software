<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "file:///C:/InfoShare/Web/Author/ASP/DocTypes/dita-oasis/1.2/technicalContent/dtd/task.dtd">
<task id="GUID-42EF7533-353E-4E06-980D-E33E4A53AEC8" xml:lang="en" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/">
  <title id="GUID-44CFA60C-8920-41FE-A175-D353098CC4EB">Enable LDAP authentication with the <ph conref="ISH_variables.dita#variables/ELEMENT-SHORT">Element</ph> API</title>
  <shortdesc>You can configure storage system integration with an existing LDAP server.
        This enables LDAP administrators to centrally manage storage system access for
        users.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>LDAP<indexterm>enabling
                        authentication</indexterm><indexterm>configuring</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context id="GUID-CB7B2CB0-FA40-4ED6-9217-E7C554184EE5">
      <p>You can configure LDAP with either the <ph conref="ISH_variables.dita#variables/ELEMENT-SHORT">Element</ph> user interface or the <ph conref="ISH_variables.dita#variables/ELEMENT-SHORT">Element</ph> API.
                This procedure describes how to configure LDAP using the <ph conref="ISH_variables.dita#variables/ELEMENT-SHORT">Element</ph> API. </p>
      <p>To leverage LDAP authentication on a SolidFire cluster, you enable LDAP
                authentication first on the cluster using the<cmdname>
                    EnableLdapAuthentication</cmdname> API method. </p>
    </context>
    <steps id="GUID-039E81C4-AF1C-486B-9FDA-447653F53699">
      <step id="STEP_1E8EE13C6D214C2BBE69C18CBD917DF6">
        <cmd>Enable LDAP authentication first on the cluster using the<cmdname>
                        EnableLdapAuthentication</cmdname> API method.</cmd>
      </step>
      <step id="STEP_23584C661B2D4E8C836E3659BCE99A65">
        <cmd>Enter the required information.</cmd>
        <info>
          <xref href="011305D4-FD6F-4222-BCFC-8DC5612C836C_.dita#GUID-011305D4-FD6F-4222-BCFC-8DC5612C836C" format="dita" />
        </info>
        <stepxmp>
          <codeblock xml:space="preserve">{
     "method":"EnableLdapAuthentication",
     "params":{
          "authType": "SearchAndBind",
          "groupSearchBaseDN": "dc=prodtest,dc=solidfire,dc=net",
          "groupSearchType": "ActiveDirectory",
          "searchBindDN": "SFReadOnly@prodtest.solidfire.net",
          "searchBindPassword": "ReadOnlyPW",
          "userSearchBaseDN": "dc=prodtest,dc=solidfire,dc=net ",
          "userSearchFilter": "(&amp;(objectClass=person)(sAMAccountName=%USERNAME%))"
          "serverURIs": [
               "ldap://172.27.1.189",
          [
     },
  "id":"1"
}</codeblock>
        </stepxmp>
      </step>
      <step id="STEP_A266EC91F188418CB9C093458E528860">
        <cmd>Change the values of the following parameters:  </cmd>
        <info>
          <table frame="all" rowsep="1" colsep="1">
            <tgroup cols="2" align="left">
              <colspec colname="c1" colnum="1" colwidth="1*" />
              <colspec colname="c2" colnum="2" colwidth="2*" />
              <thead>
                <row>
                  <entry>Parameters used</entry>
                  <entry>Description</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <parmname>authType</parmname>: SearchAndBind</entry>
                  <entry>Dictates that the cluster will use the readonly service
                                        account to first search for the user being authenticated and
                                        subsequently bind that user if found and
                                        authenticated.</entry>
                </row>
                <row>
                  <entry>
                    <parmname>groupSearchBaseDN</parmname>:
                                        dc=prodtest,dc=solidfire,dc=net</entry>
                  <entry>Specifies the location in the LDAP tree to begin
                                        searching for groups. For this example, we’ve used the root
                                        of our tree. If your LDAP tree is very large, you might want
                                        to set this to a more granular sub-tree to decrease search
                                        times.</entry>
                </row>
                <row>
                  <entry>
                    <parmname>userSearchBaseDN</parmname>:
                                        dc=prodtest,dc=solidfire,dc=net</entry>
                  <entry>Specifies the location in the LDAP tree to begin
                                        searching for users. For this example, we’ve used the root
                                        of our tree. If your LDAP tree is very large, you might want
                                        to set this to a more granular sub-tree to decrease search
                                        times.</entry>
                </row>
                <row>
                  <entry>
                    <parmname>groupSearchType</parmname>:
                                        ActiveDirectory</entry>
                  <entry>Uses the Windows Active Directory server as the LDAP
                                        server.</entry>
                </row>
                <row>
                  <entry>
                    <p>
                      <parmname>userSearchFilter</parmname>:</p>
                    <codeblock xml:space="preserve">“(&amp;(objectClass=person)(sAMAccountName=%<varname>USERNAME</varname>%))”</codeblock>
                    <p>If you want to use the <parmname>userPrincipalName</parmname> (email address for
                                            login) you could change the <parmname>userSearchFilter</parmname> to:</p>
                    <codeblock xml:space="preserve">“(&amp;(objectClass=person)(userPrincipalName=%<varname>USERNAME</varname>%))”</codeblock>
                    <p>Or, if you’d like to search both
                                                <parmname>userPrincipalName</parmname> and
                                                <parmname>sAMAccountName</parmname>, you can use the
                                            following <parmname>userSearchFilter</parmname>: </p>
                    <codeblock xml:space="preserve">“(&amp;(objectClass=person)(|(sAMAccountName=%<varname>USERNAME</varname>%)(userPrincipalName=%<varname>USERNAME</varname>%)))”</codeblock>
                  </entry>
                  <entry>Leverages the <parmname>sAMAccountName</parmname> as our
                                        username for logging in to the SolidFire cluster. These
                                        settings tell LDAP to search for the username specified
                                        during login in the <parmname>sAMAccountName</parmname>
                                        attribute and also limit the search to entries that have
                                        “person” as a value in the objectClass attribute.</entry>
                </row>
                <row>
                  <entry>
                    <parmname>searchBindDN</parmname>
                  </entry>
                  <entry>This is the distinguished name of readonly user that will
                                        be used to search the LDAP directory. For active directory
                                        it’s usually easiest to use the userPrincipalName (email
                                        address format) for the user.</entry>
                </row>
                <row>
                  <entry>
                    <parmname>searchBindPassword</parmname>
                  </entry>
                  <entry>This is the password for the readonly user
                                        account.</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </info>
      </step>
    </steps>
    <postreq id="GUID-DACF4076-0E2C-4C18-A2A9-23F150604694">To test this, log out of the <ph conref="ISH_variables.dita#variables/ELEMENT-SHORT">Element</ph> UI and log back in as a user in that group.
        </postreq>
  </taskbody>
</task>